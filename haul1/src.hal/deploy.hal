##	put	"deployer.hal - (C) 2011-07-17 Bernhard -HotKey- Slawik, http://www.bernhardslawik.de"
##	put	"Hello! I am deployer, part of the HAL+HTK/skynet/shadowRunner project. I call HTKs and deploy stuff!"


//	Deploys a complete bundle to the given platform
//
//	Example:
//		CONST	platform	"vbs"
//		CONST	filename	"child.vbs"
//		CALL	deploy	_currPlatform, $htk, $platform, $filename
//
FUNCTION	deploy	$currPlatform, $currHtk, $destPlatform, $destFilename
	VAR	pose
	SET	$pose	"Deploying on "
	str:append	$currPlatform	$pose
	str:append	" to "	$pose
	str:append	$destPlatform	$pose
	str:append	" as "	$pose
	str:append	$destFilename	$pose
	str:append	"..."	$pose
	put	$pose
	
	
	VAR	resNames	[7]
	SET	$resNames[0]	"htk_php.hal"
	SET	$resNames[1]	"htk_php.inc.php"
	SET	$resNames[2]	"htk_js.hal"
	SET	$resNames[3]	"htk_js.inc.js"
	SET	$resNames[4]	"htk_vbs.hal"
	SET	$resNames[5]	"htk_vbs.inc.vbs"
	
	SET	$resNames[6]	"deploy.hal"
	SET	$resNames[7]	"autorun.hal"
	VAR	resName
	VAR	resData
	
	VAR	nameSrcHtk
	SET	$nameSrcHtk	"htk_"
	str:append	$destPlatform	$nameSrcHtk
	str:append	".hal"	$nameSrcHtk
	
	VAR	classNameHtk
	SET	$classNameHtk	"HTK"
	str:append	$destPlatform	$classNameHtk
	
	VAR	LF
	str:char	10	$LF
	VAR	TAB
	str:char	9	$TAB
	VAR	DBLQUO
	str:char	34	$DBLQUO
	
	
	SET	$pose	"Loading HTK HAL source for destination platform: "
	str:append	$nameSrcHtk	$pose
	str:append	"..."	$pose
	put	$pose
	
	VAR	srcHtk
	res:getString	$nameSrcHtk	$srcHtk
	
	IF	$currPlatform != $destPlatform
		
		//	Translate the HTK for creating into the destination platform
		CLASS_CALL	$currHtk	deployStart
		
		//	Dont include libs - would be duplicate in current process!
		##	CLASS_CALL	$currHtk	translateLibs
		
		CLASS_CALL	$currHtk	translateStart
		
		put	"Translating HTK..."
		CALL	translate	$srcHtk, $currHtk
		
		//	Write RUN/RETURN code to instantiate the HTK after loading
		SET	$resData	""
		str:append	$LF	$resData
		str:append	"VAR"	$resData
		str:append	$TAB	$resData
		str:append	"$instance"	$resData
		str:append	$LF	$resData
		
		str:append	"NEW"	$resData
		str:append	$TAB	$resData
		str:append	"$instance"	$resData
		str:append	$TAB	$resData
		str:append	$classNameHtk	$resData
		str:append	$LF	$resData
		
		str:append	"RETURN_EVAL"	$resData
		str:append	$TAB	$resData
		str:append	"$instance"	$resData
		str:append	$LF	$resData
		CALL	translate	$resData, $currHtk
		
		CLASS_CALL	$currHtk	translateEnd
		
		//	Load compiled destination HTK...
		put	"Loading translated HTK..."
		
		##	CLASS_RESULT	$resData	$currHtk	deployEnd
		##	file:putString	"_htk_eval"	$resData
		
		VAR	destHtk
		CLASS_RESULT_REF	$destHtk	$currHtk	run
		##	NEW_NAME	$destHtk	$classNameHtk
		##	NEW	$destHtk	$classNameHtk
	
	ELSE
		put	"Source platform == destination platform, re-using my own HTK..."
		SET_REF	$destHtk	$currHtk
	/IF
	
	put	"Deploying using destination HTK..."
	CLASS_CALL	$destHtk	deployStart
	
	//	Bundle resources
	put	"Adding Resources..."
	
	CLASS_CALL	$destHtk	resourceStart
	FOR_EACH	$resName	$resNames
		put	$resName
		##	file:getString	$resFilename	$resData
		res:getString	$resName	$resData
		CLASS_CALL	$destHtk	resourceAdd	$resName, $resData
	/FOR
	CLASS_CALL	$destHtk	resourceEnd
	
	
	put	"Bootstrapping..."
##	//	Load HAL-source of HTK for requested deployment platform from resource
##	SET	$pose	"(Re-)Loading HTK for destination platform for native bootstrap: "
##	str:append	$nameSrcHtk	$pose
##	str:append	"..."	$pose
##	put	$pose
##	
##	VAR	srcHtk
##	res:getString	$nameSrcHtk	$srcHtk
	
	//	Generate info section
	put	"Creating HAL-source for Info section of bootstrap..."
	VAR	srcInfo
	SET	$srcInfo	""
	
	//	Comment
	str:append	"##"	$srcInfo
	str:append	$TAB	$srcInfo
	str:append	"Info"	$srcInfo
	str:append	$LF	$srcInfo
	
	//	Generation
	str:append	"CONST"	$srcInfo
	str:append	$TAB	$srcInfo
	str:append	"generation"	$srcInfo
	str:append	$TAB	$srcInfo
	str:append	_generation+1	$srcInfo
	str:append	$LF	$srcInfo
	
	//	Deploy time
	str:append	"CONST"	$srcInfo
	str:append	$TAB	$srcInfo
	str:append	"deployTime"	$srcInfo
	str:append	$TAB	$srcInfo
##	@TODO: time:getString??
	str:append	$DBLQUO	$srcInfo
	str:append	"UNKNOWN TIME"	$srcInfo
	str:append	$DBLQUO	$srcInfo
	str:append	$LF	$srcInfo
	
	//	History
	str:append	"CONST"	$srcInfo
	str:append	$TAB	$srcInfo
	str:append	"history"	$srcInfo
	str:append	$TAB	$srcInfo
	str:append	$DBLQUO	$srcInfo
	str:append	_history	$srcInfo
	str:append	", Deployed to "	$srcInfo
	str:append	$destPlatform	$srcInfo
	str:append	" ("	$srcInfo
	str:append	$destFilename	$srcInfo
	str:append	") at "	$srcInfo
	str:append	"UNKNOWN TIME"	$srcInfo
	str:append	$DBLQUO	$srcInfo
	str:append	$LF	$srcInfo
	
	//	Current platform
##	str:append	"VAR"	$srcInfo
##	str:append	$TAB	$srcInfo
##	str:append	"currPlatform"	$srcInfo
##	str:append	$LF	$srcInfo
##	
##	str:append	"SET"	$srcInfo
	str:append	"CONST"	$srcInfo
	str:append	$TAB	$srcInfo
##	str:append	"$currPlatform"	$srcInfo
	str:append	"currPlatform"	$srcInfo
	str:append	$TAB	$srcInfo
	str:append	$DBLQUO	$srcInfo
	str:append	$destPlatform	$srcInfo
	str:append	$DBLQUO	$srcInfo
	str:append	$LF	$srcInfo
	
	str:append	"VAR"	$srcInfo
	str:append	$TAB	$srcInfo
	str:append	"htk"	$srcInfo
	str:append	$LF	$srcInfo
	
	//	Create HTK for current platform
	str:append	"NEW"	$srcInfo
	str:append	$TAB	$srcInfo
	str:append	"$htk"	$srcInfo
	str:append	$TAB	$srcInfo
	str:append	"HTK"	$srcInfo
	str:append	$destPlatform	$srcInfo
	str:append	$LF	$srcInfo
	
	
	//	Translate...
	CLASS_CALL	$destHtk	translateLibs
	CLASS_CALL	$destHtk	translateStart
	
	put	"Compiling+Linking bootstrap: Info..."
	CALL	translate	$srcInfo, $destHtk
	
	put	"Compiling+Linking bootstrap: Native HTK..."
	CALL	translate	$srcHtk, $destHtk
	
	put	"Compiling+Linking bootstrap: Autorun..."
	VAR	nameSrcAuto
	SET	$nameSrcAuto	"autorun.hal"
	VAR	srcAuto
	res:getString	$nameSrcAuto	$srcAuto
	CALL	translate	$srcAuto, $destHtk
	
	CLASS_CALL	$destHtk	translateEnd
	
	
	VAR	code
	CLASS_RESULT	$code	$destHtk	deployEnd
	put	"Translation finished!"
	
	//	put	$code
	SET	$pose	"Saving: "
	str:append	$destFilename	$pose
	str:append	"..."	$pose
	put	$pose
	file:putString	$destFilename	$code
	
	RETURN	$code
/FUNCTION



//	Translate the given HAL source using the given HTK
FUNCTION	translate	$data, $destHtk
	//	Explode into lines
	VAR	TAB
	str:char	9	$TAB
	VAR	LF
	str:char	10	$LF
	
	##	VAR	lines	[]
	VAR	lines
	str:explode	$LF	$data	$lines
	
	//	Iterate thru all lines
	VAR	line
	FOR_EACH	$line	$lines
		VAR	l
		str:len	$line	$l
		IF	$l > 0
			VAR	b
			str:charCodeAt	$line	0	$b
			//	Skip commented lines
			IF	$b != 35
				//	Strip and count leading TABs
				VAR	indents
				SET	$indents	0
				
				VAR	lineClean
				SET	$lineClean	""
				
				VAR	done
				SET	$done	0
				
				//	Strip CR/LF
				str:charCodeAt	$line	$l-1	$b
				IF	$b == 10
					DEC	$l
				/IF
				str:charCodeAt	$line	$l-1	$b
				IF	$b == 13
					DEC	$l
				/IF
				
				VAR	i
				SET	$i	0
				WHILE_NEQ	$i	$l
					str:charCodeAt	$line	$i	$b
					IF	$done == 0
						IF	$b == 9
							INC	$indents
						ELSE
							SET	$done	1
						/IF
					/IF
					IF	$done > 0
						str:appendByte	$b	$lineClean
						INC	$done
					/IF
					INC	$i
				/WHILE
				DEC	$done
				
				##	VAR	items	[]
				VAR	items
				str:explode	$TAB	$lineClean	$items
				IF	($items[0] != "")
					IF	$items[0] == "!MERGE"
						putR	"Merging HAL source: "
						put	$items[1]
						
						VAR	dataMerge
						res:getString	$items[1]	$dataMerge
						CALL	translate	$dataMerge, $destHtk
						
					ELSE
						CLASS_CALL	$destHtk	translateInstruction	$items, $lineClean, $indents
					/IF
				/IF
			/IF
		/IF
	/FOR
/FUNCTION


put	"deployer.hal - Loaded."
END